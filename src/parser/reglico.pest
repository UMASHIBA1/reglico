number = {
    ASCII_DIGIT+
}

types = {
    "number"
}

ident_no_type = {
    (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")*
}

ident_with_type = {
    (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* ~ (":" ~ types)
}

ident = _{
    ident_with_type |
    ident_no_type
}

verb = {
    "+"
}

dyadic = {
    expr ~ verb ~ expr
}

const_assignment = {
    "const" ~ ident_no_type ~ "=" ~ number
}

assignment = _{
    const_assignment ~ ";"
}

function = {
    "fn" ~ ident_no_type ~ "(" ~ ident_with_type ~ ("," ~ ident_with_type)* ~ ")" ~ "{"
    ~ stmt* ~ ("return" ~ no_assign_stmt)?
    ~ "}"}

able_semicolon_expr = _{
    dyadic
}

expr = _{
    function |
    able_semicolon_expr
}

stmt = _{
    able_semicolon_expr ~ ";" |
    assignment |
    function
}

no_assign_stmt = {
    able_semicolon_expr ~ ";" |
    function
}

program = _{
    SOI ~
    stmt ~
    EOI
}


WHITESPACE = _{ " " | "\t" | "\n" }
